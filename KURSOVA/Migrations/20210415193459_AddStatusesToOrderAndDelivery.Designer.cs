// <auto-generated />
using System;
using KURSOVA.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KURSOVA.Migrations
{
    [DbContext(typeof(I1Delivery_KursovaContext))]
    [Migration("20210415193459_AddStatusesToOrderAndDelivery")]
    partial class AddStatusesToOrderAndDelivery
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KURSOVA.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AccountID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("AccountId");

                    b.HasIndex("Login")
                        .IsUnique()
                        .HasName("UQ__Account__5E55825B33E36C14");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("KURSOVA.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CityID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City1")
                        .IsRequired()
                        .HasColumnName("City")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("CityId");

                    b.HasIndex("City1")
                        .IsUnique()
                        .HasName("UQ__City__AEC4A06DA1E844FE");

                    b.ToTable("City");
                });

            modelBuilder.Entity("KURSOVA.Models.Courier", b =>
                {
                    b.Property<int>("CourierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CourierID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourierTypeId")
                        .HasColumnName("CourierTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("char(13)")
                        .IsFixedLength(true)
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CourierId");

                    b.HasIndex("CourierTypeId");

                    b.ToTable("Courier");
                });

            modelBuilder.Entity("KURSOVA.Models.CourierType", b =>
                {
                    b.Property<int>("CourierTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CourierTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CourierTypeId");

                    b.ToTable("CourierType");
                });

            modelBuilder.Entity("KURSOVA.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CustomerID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("char(13)")
                        .IsFixedLength(true)
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("KURSOVA.Models.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DeliveryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourierId")
                        .HasColumnName("CourierID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("LocationId")
                        .HasColumnName("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnName("OrderID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("DeliveryId");

                    b.HasIndex("CourierId");

                    b.HasIndex("LocationId");

                    b.HasIndex("OrderId");

                    b.ToTable("Delivery");
                });

            modelBuilder.Entity("KURSOVA.Models.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DishID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("DishTypeId")
                        .HasColumnName("DishTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnName("UnitOfMeasureID")
                        .HasColumnType("int");

                    b.HasKey("DishId");

                    b.HasIndex("DishTypeId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("Dish");
                });

            modelBuilder.Entity("KURSOVA.Models.DishType", b =>
                {
                    b.Property<int>("DishTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DishTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DishType1")
                        .IsRequired()
                        .HasColumnName("DishType")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("DishTypeId");

                    b.HasIndex("DishType1")
                        .IsUnique()
                        .HasName("UQ__DishType__2014DB75326D36F9");

                    b.ToTable("DishType");
                });

            modelBuilder.Entity("KURSOVA.Models.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DistrictID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("District1")
                        .IsRequired()
                        .HasColumnName("District")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("DistrictId");

                    b.HasIndex("CityId");

                    b.HasIndex("District1", "CityId")
                        .IsUnique()
                        .HasName("UQ__District__F4CF6C26C5F4AAC4");

                    b.ToTable("District");
                });

            modelBuilder.Entity("KURSOVA.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InvoiceID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("DeliveryPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("OrderId")
                        .HasColumnName("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmt")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("OrderId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("KURSOVA.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LocationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuildingNbr")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("StreetId")
                        .HasColumnName("StreetID")
                        .HasColumnType("int");

                    b.HasKey("LocationId");

                    b.HasIndex("StreetId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("KURSOVA.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnName("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmt")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("KURSOVA.Models.OrderLine", b =>
                {
                    b.Property<int>("OrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderLineID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("OrderId")
                        .HasColumnName("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RestaurantDishRelationId")
                        .HasColumnName("RestaurantDishRelationID")
                        .HasColumnType("int");

                    b.HasKey("OrderLineId");

                    b.HasIndex("OrderId");

                    b.HasIndex("RestaurantDishRelationId");

                    b.ToTable("OrderLine");
                });

            modelBuilder.Entity("KURSOVA.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RestaurantID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("LocationId")
                        .HasColumnName("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("char(13)")
                        .IsFixedLength(true)
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("RestaurantId");

                    b.HasIndex("LocationId");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("KURSOVA.Models.RestaurantDishRelation", b =>
                {
                    b.Property<int>("RestaurantDishRelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RestaurantDishRelationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("DishId")
                        .HasColumnName("DishID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RestaurantId")
                        .HasColumnName("RestaurantID")
                        .HasColumnType("int");

                    b.HasKey("RestaurantDishRelationId");

                    b.HasIndex("DishId");

                    b.HasIndex("RestaurantId", "DishId")
                        .IsUnique()
                        .HasName("UQ__Restaura__96CD78438D850C05");

                    b.ToTable("RestaurantDishRelation");
                });

            modelBuilder.Entity("KURSOVA.Models.SalaryPayment", b =>
                {
                    b.Property<int>("SalaryPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SalaryPaymentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourierId")
                        .HasColumnName("CourierID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("DeliveriesCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndPeriodDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("FineAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("PaymentAmt")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PaymentForDeliveries")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Premium")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("StartPeriodDate")
                        .HasColumnType("datetime");

                    b.HasKey("SalaryPaymentId");

                    b.HasIndex("CourierId");

                    b.ToTable("SalaryPayment");
                });

            modelBuilder.Entity("KURSOVA.Models.Street", b =>
                {
                    b.Property<int>("StreetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StreetID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("DistrictId")
                        .HasColumnName("DistrictID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Street1")
                        .IsRequired()
                        .HasColumnName("Street")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("StreetId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("Street1", "DistrictId")
                        .IsUnique()
                        .HasName("UQ__Street__95BDFD711438F4D1");

                    b.ToTable("Street");
                });

            modelBuilder.Entity("KURSOVA.Models.UnitOfMeasure", b =>
                {
                    b.Property<int>("UnitOfMeasureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UnitOfMeasureID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UnitOfMeasure1")
                        .IsRequired()
                        .HasColumnName("UnitOfMeasure")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UnitOfMeasureId");

                    b.ToTable("UnitOfMeasure");
                });

            modelBuilder.Entity("KURSOVA.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserTypeId")
                        .HasColumnName("UserTypeID")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KURSOVA.Models.UserType", b =>
                {
                    b.Property<int>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("UserTypeId");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("KURSOVA.Models.Courier", b =>
                {
                    b.HasOne("KURSOVA.Models.CourierType", "CourierType")
                        .WithMany("Courier")
                        .HasForeignKey("CourierTypeId")
                        .HasConstraintName("FK__Courier__Courier__571DF1D5")
                        .IsRequired();
                });

            modelBuilder.Entity("KURSOVA.Models.Delivery", b =>
                {
                    b.HasOne("KURSOVA.Models.Courier", "Courier")
                        .WithMany("Delivery")
                        .HasForeignKey("CourierId")
                        .HasConstraintName("FK__Delivery__Courie__17036CC0")
                        .IsRequired();

                    b.HasOne("KURSOVA.Models.Location", "Location")
                        .WithMany("Delivery")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK__Delivery__Locati__17F790F9")
                        .IsRequired();

                    b.HasOne("KURSOVA.Models.Order", "Order")
                        .WithMany("Delivery")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Delivery__OrderI__160F4887")
                        .IsRequired();
                });

            modelBuilder.Entity("KURSOVA.Models.Dish", b =>
                {
                    b.HasOne("KURSOVA.Models.DishType", "DishType")
                        .WithMany("Dish")
                        .HasForeignKey("DishTypeId")
                        .HasConstraintName("FK__Dish__DishTypeID__4316F928")
                        .IsRequired();

                    b.HasOne("KURSOVA.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany("Dish")
                        .HasForeignKey("UnitOfMeasureId")
                        .HasConstraintName("FK__Dish__UnitOfMeas__4222D4EF")
                        .IsRequired();
                });

            modelBuilder.Entity("KURSOVA.Models.District", b =>
                {
                    b.HasOne("KURSOVA.Models.City", "City")
                        .WithMany("District")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_District_City")
                        .IsRequired();
                });

            modelBuilder.Entity("KURSOVA.Models.Invoice", b =>
                {
                    b.HasOne("KURSOVA.Models.Order", "Order")
                        .WithMany("Invoice")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Invoice__OrderID__656C112C")
                        .IsRequired();
                });

            modelBuilder.Entity("KURSOVA.Models.Location", b =>
                {
                    b.HasOne("KURSOVA.Models.Street", "Street")
                        .WithMany("Location")
                        .HasForeignKey("StreetId")
                        .HasConstraintName("FK_Location_Street")
                        .IsRequired();
                });

            modelBuilder.Entity("KURSOVA.Models.Order", b =>
                {
                    b.HasOne("KURSOVA.Models.Customer", "Customer")
                        .WithMany("Order")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Order__CustomerI__4CA06362")
                        .IsRequired();
                });

            modelBuilder.Entity("KURSOVA.Models.OrderLine", b =>
                {
                    b.HasOne("KURSOVA.Models.Order", "Order")
                        .WithMany("OrderLine")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderLine__Order__5070F446")
                        .IsRequired();

                    b.HasOne("KURSOVA.Models.RestaurantDishRelation", "RestaurantDishRelation")
                        .WithMany("OrderLine")
                        .HasForeignKey("RestaurantDishRelationId")
                        .HasConstraintName("FK__OrderLine__Resta__5165187F")
                        .IsRequired();
                });

            modelBuilder.Entity("KURSOVA.Models.Restaurant", b =>
                {
                    b.HasOne("KURSOVA.Models.Location", "Location")
                        .WithMany("Restaurant")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_Restaurant_Location")
                        .IsRequired();
                });

            modelBuilder.Entity("KURSOVA.Models.RestaurantDishRelation", b =>
                {
                    b.HasOne("KURSOVA.Models.Dish", "Dish")
                        .WithMany("RestaurantDishRelation")
                        .HasForeignKey("DishId")
                        .HasConstraintName("FK__Restauran__DishI__47DBAE45")
                        .IsRequired();

                    b.HasOne("KURSOVA.Models.Restaurant", "Restaurant")
                        .WithMany("RestaurantDishRelation")
                        .HasForeignKey("RestaurantId")
                        .HasConstraintName("FK__Restauran__Resta__46E78A0C")
                        .IsRequired();
                });

            modelBuilder.Entity("KURSOVA.Models.SalaryPayment", b =>
                {
                    b.HasOne("KURSOVA.Models.Courier", "Courier")
                        .WithMany("SalaryPayment")
                        .HasForeignKey("CourierId")
                        .HasConstraintName("FK__SalaryPay__Couri__5EBF139D")
                        .IsRequired();
                });

            modelBuilder.Entity("KURSOVA.Models.Street", b =>
                {
                    b.HasOne("KURSOVA.Models.District", "District")
                        .WithMany("Street")
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("FK_Street_District")
                        .IsRequired();
                });

            modelBuilder.Entity("KURSOVA.Models.User", b =>
                {
                    b.HasOne("KURSOVA.Models.Account", "UserNavigation")
                        .WithOne("User")
                        .HasForeignKey("KURSOVA.Models.User", "UserId")
                        .HasConstraintName("FK__User__UserID__1EA48E88")
                        .IsRequired();

                    b.HasOne("KURSOVA.Models.UserType", "UserType")
                        .WithMany("User")
                        .HasForeignKey("UserTypeId")
                        .HasConstraintName("FK__User__UserTypeID__1F98B2C1")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
